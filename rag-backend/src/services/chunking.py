import aiohttp
from src.utils.logger import get_logger

logger = get_logger(__name__)


async def summarize(query, document, length=200):
    """
    Sends a query and document to the GPU service for summarization.

    Args:
        query (str): The query to guide the summarization process.
        document (str): The document to be summarized.
        length (int): The desired length of the summary. Default is 200.

    Returns:
        str: The summary generated by the GPU service.

    Raises:
        Exception: If the GPU service returns a non-200 status code or an error occurs.
    """
    logger.info(f"Summarizing document with length {len(document)} chars to target length {length}")

    async with aiohttp.ClientSession() as session:
        logger.debug("Sending request to GPU service for summarization")
        async with session.post(
            'http://gpu-service:5001/summarize',
            json={
                "query": query,
                "document": document,
                "length": length
            }
        ) as response:
            if response.status != 200:
                error_text = await response.text()
                logger.error(f"GPU service summarization failed: {error_text}")
                raise Exception(f"GPU service summarization failed: {error_text}")

            result = await response.json()
            summary = result['summary']
            logger.debug(f"Summarization complete, produced {len(summary)} chars")
            logger.info("Document summarized successfully")

            return summary
